{"body":"# Fixbraces\r\n\r\nA command line app that puts the opening brace for an Objective-C code block on\r\nthe same line as the opening clause.\r\n\r\nXcode is inconsistent about the placement of braces for code that it inserts for\r\nus. Sometimes it puts the opening braces on the same line, sometimes it puts it\r\non the next line. I prefer it to be on the opening line. This command line app\r\nmakes it easy to change selected source files, or all the files in a folder, or\r\neven run with the dry-run option to see what files would be changed.\r\n\r\n## Installation\r\n\r\n### From Rubygems\r\n\r\n    $ gem install fixbraces\r\n\r\n### From source\r\n\r\nClone the repository and then build and install it:\r\n\r\n    rake install\r\n\r\n## Usage\r\n\r\nOnce it is installed, you can run it from the command line. Either pass it the\r\ncurrent directory ('.') or a path to a directory that contains source\r\nfile. Alternatively, pass it a list of files.\r\n\r\nYou can pass it a directory:\r\n\r\n    fixbraces aDirectory\r\n\r\nor even use '.' for the current directory:\r\n\r\n    fixbraces .\r\n\r\nApply it ot a single file:\r\n\r\n    fixbraces aDirectory/SourceFile.m\r\n\r\nor a number of files:\r\n\r\n    fixbraces aDirectory/*.m\r\n\r\nIf you just want to see what files _would_ be changed, then use the `--dry-run`,\r\nor `-d` option:\r\n\r\n    fixbraces -d .\r\n\r\nRun `fixbraces --help` for details.\r\n\r\n## Fixbraces Changelog\r\n\r\n### 1.3.0\r\n\r\n- Add the `--dry-run, -d` option to list the files that would change, but make\r\n  no actual corrections.\r\n\r\n### 1.2.0\r\n- Error and exit if no file or directory is passed to the script\r\n- Print a message and gracefully handle non-existent path or directory\r\n\r\n### 1.0.0\r\n- List the changed files.\r\n\r\n### 0.9.0\r\n\r\n- Initial version.\r\n\r\n## Disclaimer\r\n\r\nI have tests, you can see them for yourself. The script works, but I'm\r\naggressive about using version control, so if anything did get messed up I'm\r\nnot left in an unrecoverable state.\r\n\r\nI suggest you do the same.\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## License\r\n\r\nStandard MIT license. Knock yourself out.\r\n","google":"UA-5015208-5","tagline":"Make sure that the opening brace for an Objective-C code block is on the same line.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Fixbraces"}